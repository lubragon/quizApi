// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizApi.Data.Context;

#nullable disable

namespace quizApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241205010840_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("QuizApi.Dominio.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Evento", (string)null);
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataJogo")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Jogo");
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("QuizId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Tempo")
                        .HasColumnType("time(6)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Pergunta", (string)null);
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorreta")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Gabarito");

                    b.Property<int?>("PerguntaId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("PerguntaId");

                    b.ToTable("Respostas", (string)null);
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HashSenha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("JogoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("RespostaUsuario", b =>
                {
                    b.Property<int>("RespostasId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RespostasId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostaUsuario", (string)null);
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Pergunta", b =>
                {
                    b.HasOne("QuizApi.Dominio.Entities.Quiz", "Quiz")
                        .WithMany("Perguntas")
                        .HasForeignKey("QuizId");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Quiz", b =>
                {
                    b.HasOne("QuizApi.Dominio.Entities.Evento", "Evento")
                        .WithMany("Quizzes")
                        .HasForeignKey("EventoId");

                    b.HasOne("QuizApi.Dominio.Entities.Jogo", "Jogo")
                        .WithOne("Quiz")
                        .HasForeignKey("QuizApi.Dominio.Entities.Quiz", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizApi.Dominio.Entities.Usuario", null)
                        .WithMany("Quizzes")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Evento");

                    b.Navigation("Jogo");
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Resposta", b =>
                {
                    b.HasOne("QuizApi.Dominio.Entities.Pergunta", "Pergunta")
                        .WithMany("Respostas")
                        .HasForeignKey("PerguntaId");

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Usuario", b =>
                {
                    b.HasOne("QuizApi.Dominio.Entities.Jogo", "Jogo")
                        .WithMany("Usuario")
                        .HasForeignKey("JogoId");

                    b.Navigation("Jogo");
                });

            modelBuilder.Entity("RespostaUsuario", b =>
                {
                    b.HasOne("QuizApi.Dominio.Entities.Resposta", null)
                        .WithMany()
                        .HasForeignKey("RespostasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizApi.Dominio.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Evento", b =>
                {
                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Jogo", b =>
                {
                    b.Navigation("Quiz");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Pergunta", b =>
                {
                    b.Navigation("Respostas");
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Quiz", b =>
                {
                    b.Navigation("Perguntas");
                });

            modelBuilder.Entity("QuizApi.Dominio.Entities.Usuario", b =>
                {
                    b.Navigation("Quizzes");
                });
#pragma warning restore 612, 618
        }
    }
}
